<%= render 'layouts/map_js' %>
<script type="text/javascript">

// autocomplete address if user wants to search for another place

var placeSearch, autocomplete;

// initialize

function initialize() {
  if (navigator.geolocation){

    navigator.geolocation.getCurrentPosition(make_map, handleError);
    
    var searchLoc = document.getElementById('search_location');
    
    autocomplete = new google.maps.places.Autocomplete(
        /** @type {HTMLInputElement} */(searchLoc),
        { types: ['geocode'] });
    // When the user selects an address from the dropdown,
    // populate the address fields in the form.
    google.maps.event.addListener(autocomplete, 'place_changed', function() {
      fillInAddress();
    });
    
    google.maps.event.addDomListener(searchLoc, 'keydown', function(e) { 
      if (e.keyCode == 13) { e.preventDefault(); }
    });
    
  } else { 
    console.log("No geolocation whatsoever!");
    make_map();
  }
}


// fill in form

function fillInAddress() {
  // Get the place details from the autocomplete object.
  
  var place = autocomplete.getPlace();
  
  if (!place.geometry) {
    return;
  } else {
    var position = {
      coords: {
        latitude: place.geometry.location.lat(),
        longitude: place.geometry.location.lng()
      }
    };
      make_map(position);
  }
  
}



// geocode to fill in address from geolocatiom data

  function codeLatLng(latlng) {
    geocoder = new google.maps.Geocoder();
    
    geocoder.geocode({'latLng': latlng}, function(results, status) {
      
      console.log( "GeocodeLatLng status: " + status.toString());
      
      if (status == google.maps.GeocoderStatus.OK) {
        if (results[0]) {
          var address = results[0].formatted_address;
          document.getElementById("search_location").setAttribute('value', address);
        }
      } else {
        console.log("GeocodeLatLng failed due to: " + status);
      }
      
    });
  }


  // make google map

  function make_map(position) {
    
    var lat = typeof position !== 'undefined' ? position.coords.latitude : 37.4292;
    var lng = typeof position !== 'undefined' ? position.coords.longitude : -122.1381;

    console.log("Here's where the map is currently centered:");
    console.log(lat, lng);
    console.log("Default map location is Palo Alto.");

    var latlng = new google.maps.LatLng(lat, lng);
    
    var bounds = new google.maps.LatLngBounds(latlng, latlng);
    
    console.log(bounds);
    
    var mapOptions = {
      center: latlng,
      zoom: 15
    };
    
    var map = new google.maps.Map(document.getElementById("map-canvas"),
        mapOptions);
    
    codeLatLng(latlng);
    
    var marker = new google.maps.Marker({
        position: latlng,
        map: map
    });
    
    autocomplete.setBounds(bounds);
  }
  
  // handle geolocation error
  
  function handleError(error) {
    switch(error.code) {
      case error.PERMISSION_DENIED:
        console.log("Geolocation permission denied!");
        make_map();
        break;
      case error.POSITION_UNAVAILABLE:
        console.log("Geolocation permission unavailable!");
        make_map();
        break;
      case error.TIMEOUT:
        console.log("Geolocation timeout!");
        make_map();
        break;
      case error.UNKNOWN_ERROR:
        console.log("Geolocation ERROR UNKNOWN!");
        make_map();
        break;
    }
  }
  
  
  google.maps.event.addDomListener(window, 'load', initialize);
  
</script>